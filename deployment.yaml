apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: nestjs-data-connection-request-control-manager
  name: nestjs-data-connection-request-control-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nestjs-data-connection-request-control-manager
  strategy:
    rollingUpdate:
  template:
    metadata:
      labels:
        run: nestjs-data-connection-request-control-manager
    spec:
      nodeName: worker
      hostname: nestjs-data-connection-request-control-manager
      containers:
        - name: nestjs-data-connection-request-control-manager
          image: latonaio/nestjs-data-connection-request-control-manager:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: "MYSQL_USER"
              value: "XXXXXXXXXX"
            - name: "MYSQL_PASSWORD"
              value: "XXXXXXXXXX"
            - name: "MYSQL_DB"
              value: "Authenticator"
            - name: "MYSQL_PORT"
              value: "3306"
            - name: "MYSQL_HOST"
              value: "XXXXXXXXXX"
            - name: "DRIVER"
              value: "mysql"
            - name: "DATABASE_URL"
              value: "${DRIVER}://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}?sslmode=prefer"
            - name: "AUTHENTICATOR_HOST"
              value: "XXXXXXXXXX"
            - name: "AUTHENTICATOR_PORT"
              value: "30020"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: nestjs-data-connection-request-control-manager
  name: nestjs-data-connection-request-control-manager
spec:
  selector:
    run: nestjs-data-connection-request-control-manager
  type: NodePort
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
      nodePort: 30000
---
